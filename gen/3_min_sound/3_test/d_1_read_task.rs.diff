--- pie/tests/common/mod.rs
+++ pie/tests/common/mod.rs
@@ -1,6 +1,8 @@
-use std::io::{BufWriter, ErrorKind, Stdout};
+use std::io::{BufWriter, ErrorKind, Read, Stdout};
+use std::path::PathBuf;
 
 use pie::{Context, Pie, Task};
+use pie::stamp::FileStamper;
 use pie::tracker::CompositeTracker;
 use pie::tracker::event::EventTracker;
 use pie::tracker::writing::WritingTracker;
@@ -60,12 +62,20 @@
 #[derive(Clone, Eq, PartialEq, Hash, Debug)]
 pub enum TestTask {
   Return(&'static str),
+  ReadFile(PathBuf, FileStamper),
 }
 impl Task for TestTask {
   type Output = Result<TestOutput, ErrorKind>;
-  fn execute<C: Context<Self>>(&self, _context: &mut C) -> Self::Output {
+  fn execute<C: Context<Self>>(&self, context: &mut C) -> Self::Output {
     match self {
       TestTask::Return(string) => Ok(string.to_string().into()),
+      TestTask::ReadFile(path, stamper) => {
+        let mut string = String::new();
+        if let Some(mut file) = context.require_file_with_stamper(path, *stamper).map_err(|e| e.kind())? {
+          file.read_to_string(&mut string).map_err(|e| e.kind())?;
+        }
+        Ok(string.into())
+      }
     }
   }
 }
