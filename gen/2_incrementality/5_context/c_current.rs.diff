--- pie/src/context/top_down.rs
+++ pie/src/context/top_down.rs
@@ -9,18 +9,23 @@
 
 pub struct TopDownContext<T, O> {
   store: Store<T, O>,
+  current_executing_task: Option<TaskNode>,
 }
 
 impl<T: Task> TopDownContext<T, T::Output> {
   pub fn new() -> Self {
     Self {
       store: Store::default(),
+      current_executing_task: None,
     }
   }
 }
 
 impl<T: Task> Context<T> for TopDownContext<T, T::Output> {
   fn require_file_with_stamper<P: AsRef<Path>>(&mut self, path: P, stamper: FileStamper) -> Result<Option<File>, io::Error> {
+    let Some(current_executing_task_node) = &self.current_executing_task else {
+      return fs::open_if_file(path); // No current executing task, so no dependency needs to be made.
+    };
     todo!()
   }
 
