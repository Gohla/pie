--- pie/src/store.rs
+++ pie/src/store.rs
@@ -1,3 +1,4 @@
+use std::borrow::Borrow;
 use std::collections::HashMap;
 use std::path::{Path, PathBuf};
 
@@ -10,8 +11,8 @@
 /// and query this graph.
 pub struct Store<T, O> {
   graph: DAG<NodeData<T, O>, Dependency<T, O>>,
-  file_to_node: HashMap<PathBuf, Node>,
-  task_to_node: HashMap<T, Node>,
+  file_to_node: HashMap<PathBuf, FileNode>,
+  task_to_node: HashMap<T, TaskNode>,
 }
 
 #[derive(Debug)]
@@ -23,6 +24,24 @@
   },
 }
 
+/// Newtype for file `Node`s.
+#[repr(transparent)]
+#[derive(Clone, Copy, PartialEq, Eq, PartialOrd, Ord, Hash, Debug)]
+pub struct FileNode(Node);
+
+impl Borrow<Node> for &FileNode {
+  fn borrow(&self) -> &Node { &self.0 }
+}
+
+/// Newtype for task `Node`s.
+#[repr(transparent)]
+#[derive(Clone, Copy, PartialEq, Eq, PartialOrd, Ord, Hash, Debug)]
+pub struct TaskNode(Node);
+
+impl Borrow<Node> for &TaskNode {
+  fn borrow(&self) -> &Node { &self.0 }
+}
+
 impl<T: Task> Default for Store<T, T::Output> {
   fn default() -> Self {
     Self {
